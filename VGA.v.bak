module VGAmodule (
    clk, vga_clk, vsync, hsync, vid_blank, clrvidh, clrvidv, VGA_R, VGA_G, VGA_B
    
    // output reg vga_sync
);
input clk;
output reg vga_clk = 0;
output vsync;
output hsync;
output vid_blank;
output clrvidh, clrvidv;
output reg [7:0] VGA_R = 8'd255;
output reg [7:0] VGA_G = 8'd255;
output reg [7:0] VGA_B = 8'd255;
//vga clock 25mhz
    // reg vga_clk = 0;
    always @(posedge clk) begin
        vga_clk = ~vga_clk;
    end
    reg [20:0] contvidv = 0, contvidh =0 ;
    assign vsync = ((contvidv >= 491) & (contvidv < 498))? 1'b0 : 1'b1;
    assign hsync = ((contvidh >= 664) & (contvidh < 760))? 1'b0 : 1'b1;
    assign vid_blank = ((contvidv >= 8) & (contvidv < 420) & (contvidh >= 20) & (contvidh < 624)) ? 1'b1 : 1'b0;
    assign clrvidh = (contvidh <= 800) ? 1'b0 : 1'b1;
    assign clrvidv = (contvidv <= 525) ? 1'b0 : 1'b1;

    always@(posedge vga_clk)begin
        if(clrvidh) begin
            contvidh <= 0;
        end
        else begin
            contvidh <= contvidh + 1;
        end
    end

    always@(posedge vga_clk) begin
        if(clrvidv) begin
            contvidv <= 0;
        end
        else begin
            if(contvidh == 798)begin
                contvidv <= contvidv + 1;
            end
        end
    end
endmodule

module VGA_tb();

reg clk = 0;
wire vga_clk, vsync, hsync, vid_blank, clrvidh, clrvidv;
wire [7:0] VGA_R, VGA_G, VGA_B;
VGAmodule DUT(clk, vga_clk, vsync, hsync, vid_blank, clrvidh, clrvidv, VGA_R, VGA_G, VGA_B);
initial begin
    forever #5 clk = ~clk;
end
endmodule